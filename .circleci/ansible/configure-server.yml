---
- name: "configuration play." 
  hosts: web
  user: ubuntu
  become: true
  become_method: sudo
  become_user: root  
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: False
    - ansible_stdout_callback: yaml
    - record_host_keys: False
    - TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"
    - TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
    - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
    - TYPEORM_PORT: 5432
    - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
    - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
    - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
    - TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
    - TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}"  
    

  pre_tasks:
    - name: "wait 600 seconds for target connection to become reachable/usable."
      # Your code here
      wait_for_connection:

    - name: "print vars"
      ansible.builtin.debug:
        msg:
        - "Provisioning based on YOUR_KEY which is: {{ lookup('env', 'TYPEORM_USERNAME')}}"
        - "These servers were built using the password of '{{ TYPEORM_DATABASE }}'. Please retain this for later use."


    - name: "install python for Ansible."
      # Your code here      
      become: true
      raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3)
      changed_when: false


  roles:
    # Your code here
    - configure-server